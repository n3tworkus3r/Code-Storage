#include "binary struct.h"
/*
Разработайте программу, реализующую работу с бинарными файлами. Необходимо хранить информацию о студентах колледжа:
- фамилия;
- номер договора (уникален);
- номер группы;
- оценка

Реализовать следующие функции, вызываемые из меню:
1. Ввод информации о студентах с клавиатуры и сохранение ее в бинарном файле с выбранным пользователем названием.
2. Просмотр содержимого бинарного файла с выбранным пользователем названием.
3. Вывод информации о студентах по введенной пользователем фамилии из выбранного пользователем файла.
4. Вывод информации обо всех студентах с отметкой ниже 5
5. Удаление информации из выбранного бинарного файла о студенте с выбранным номером договора.
6. Изменение информации о номере группы для всех студентов из выбранного файла, имеющих неудовлетворительную отметку.
7. Вывод фамилий студентов с максимальной отметкой из выбранного файла.
8. Изменение информации об оценке введенного по фамилии студента. Файл вводит пользователь.

*/

int main() {
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	short choice;

	// Имя входного файла
	const char input_file_name[] = "input.bin";
	const char output_file_name[] = "temp_output.bin";

	do {
		cout << "\nВыберите действие:\n";
		cout << "1 - вывести информацию о студентах\n";
		cout << "2 - добавить элемент в структуру\n";
		cout << "3 - вывести информацию о студенте по заданной фамиилии\n";
		cout << "4 - вывод информации о всех студентах с оценкой ниже 5\n";
		cout << "5 - удаление информации о студенте по номеру договора\n";
		cout << "6 - изменение информации о номере группы для всех студентов, имеющих неудовлетворительную отметку\n";
		cout << "7 - вывод фамилий студентов с максимальной отметкой \n";
		cout << "8 - изменение информации об оценке введенного по фамилии студента\n";
		cout << "0 - завершить работу\n"; 
		

		cin >> choice;

		switch (choice)
		{
		case 1:

			display(input_file_name);
			break;

		case 2:
			add_element(input_file_name);
			break;

		case 3:
			output_by_last_name(input_file_name);
			break;

		case 4:
			output_less_than_five(input_file_name);
			break;

		case 5:
			del_by_contract_number(input_file_name, output_file_name);
			break;

		case 6: 
			change_group(input_file_name, output_file_name);
			break;

		case 7:
			output_by_mark(input_file_name);
			break;

		case 8:
			change_by_last_name(input_file_name, output_file_name);
			break;

		default:
			break;
		}
	} while (choice!=0);

	system("pause");

	return 0;
}